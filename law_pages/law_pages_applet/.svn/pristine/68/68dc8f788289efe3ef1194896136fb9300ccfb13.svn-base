// pages/me/register/register.js
const utils = require('../../../utils/util.js')
const config = require('../../../config.js');
var app = getApp()
Page({

  /**
   * 页面的初始数据
   */
  data: {
    sysUser: {
      idCard: "",
      password: "",
      passwordSure: "",
      userName: "",
    },
    isPassword: true,
    isPasswordSure: true,
    idCardImg: "",
    isPswShow: false,
    isSureBtn: true,
    applicant:{
      idNo: ''
    },
    region: "",
    shouxinUrl: config.shouxinHost,//首信云
    host: config.host,
    url: config.host + '/system/querySysOrgByRegionName'
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    console.log(options)
    if (options.userType == 2){
      this.setData({
        isPswShow: true,
        isSureBtn: false
      })
    }
    if (options.idCard){
      this.setData({
        ['sysUser.idCard']: options.idCard,
        ['applicant.idNo']: options.idCard
      })
      console.log(this.data.sysUser)
    }
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
  
  },
  setTip: function (content) {
    wx.showToast({
      title: content,
      icon: 'success',
      duration: 2000
    })
    return false
  },

  //注册根据地址查询服务器
  isCheckAddress: function () {
    var that = this
    //console.log(that.data.url);
    let adjustCityName = that.data.region.join('-');
    wx.request({
      url: that.data.url,
      method: "POST",
      data: {
        regionName: adjustCityName
      },
      success: res => {
        console.log(res.data);
        let data = res.data
        if (data.code == 0) {
          if (!data.result) {
            if (that.data.url.indexOf(that.data.host) != -1){
              that.setData({
                url: that.data.shouxinUrl + '/system/querySysOrgByRegionName' //首信云
              })
              that.isCheckAddress();
            } else if (that.data.url.indexOf(that.data.shouxinUrl) != -1){
              wx.showModal({
                title: '提示',
                content: '地区尚未开放',
                confirmText: "联系客服",
                success: function (res) {
                  if (res.confirm) {
                    wx.switchTab({
                      url: '../me'
                    })
                  } else if (res.cancel) {
                    that.setData({
                      region: ""
                    })
                  }
                }
              })
            }
          } else {
            that.data.url.indexOf(that.data.host) != -1 ? wx.setStorageSync("dataUrl", that.data.host) : wx.setStorageSync("dataUrl", that.data.shouxinUrl)
          }
        }
      }
    })
  },

  //可以输入密码
  ispswShow: function () {
    let that = this;
    console.log(that.data.applicant.idNo);
    console.log(that.data.sysUser.idCard);
    var url = '/login/checkAppLoginAccount';
    if (!that.data.region){
      that.setTip("请选择区域");
    }else if (that.data.applicant.idNo == "") {
      that.setTip("请输入身份证号");
    }else if (!utils.checkIdentity(that.data.applicant)) {
      that.setTip("身份证输入有误");
    } else if (!that.data.sysUser.userName) {
      that.setTip("请输入姓名");
    }else{
      var data = {
        loginAccount: that.data.applicant.idNo
      }
      console.log(that.data.applicant.idNo);
      app.NetRequestLogin(url, data, res => {
        console.log(res);
        if (res.code == 2009) {
          let id = res.result
          wx.showModal({
            title: '提示',
            content: '账号已存在，请绑定手机号',
            showCancel:false,
            confirmColor: "#0D9DEB",
            success: function (res) {
              if (res.confirm) {
                console.log(res.result);
                wx.navigateTo({
                  url: '../winCode/winCode?winCodeType=bindPhoneNo&result=' + id
                })
              } 
            }
          })
        }
        if (res.code == 2008) {
          that.setData({
            isPswShow: true,
            isSureBtn: false,
          })
        }
      })
    }
  }
  ,

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
  
  },

  // 选择调解地区
  bindRegionChange: function (e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)

    var lawCase = e.detail.value[0] + "-" + e.detail.value[1] + "-" + e.detail.value[2];
    var region = [e.detail.value[0], e.detail.value[1], e.detail.value[2]]
    let adjustCity = "";
    if (lawCase) {
      lawCase.split("省")[1] ? adjustCity = e.detail.value : adjustCity = [e.detail.value[0], '市辖区', e.detail.value[2]];
    }
    this.setData({
      region: adjustCity
    })
    this.isCheckAddress();
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
  
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
  
  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {
  
  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {
  
  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {
  
  },

  /**
  * 数据绑定事件
  */
  userBindData: function (e) {
    var attribute = e.currentTarget.dataset.attribute;
    if (this.data.sysUser.hasOwnProperty(attribute) && (attribute in this.data.sysUser)) {
      var sysUser = this.data.sysUser;
      sysUser[attribute] = e.detail.value;
      this.setData({
        sysUser: sysUser
      })
      if (e.target.dataset.attribute == "idCard"){
        this.setData({
          ['applicant.idNo']: e.detail.value
        })
      }
     
    }
  },

  /**
  * 确认密码显示
  */
  isShowSure: function () {
    this.setData({
      isPasswordSure: !this.data.isPasswordSure
    })
  },

  /**
   * 密码显示
   */
  isShow: function () {
    this.setData({
      isPassword: !this.data.isPassword
    })
  },

  /**
  * 下一步
  */
  validateRegister: function () {
    var that = this;
    var idCard = that.data.sysUser.idCard; 
    var password = that.data.sysUser.password;
    var passwordSure = that.data.sysUser.passwordSure;
    if (!password) {
      that.setTip('密码不能为空');
    }else if (!passwordSure) {
      that.setTip('确认密码不能为空');
    }else if (password != passwordSure) {
      that.setTip('两次密码不一致');
    }else{
      var password = that.data.sysUser.passwordSure; 
      var idCard = that.data.sysUser.idCard;
      var name = that.data.sysUser.userName;
      wx.navigateTo({
        url: '../winCode/winCode?password=' + password + '&idCard=' + idCard + '&name=' + name+'&winCodeType=reg' 
      })
    }
  },

  //上传图片
  uploadImg: function (event) {
    var that = this;
    wx.chooseImage({
      count: 1, // 设置最多可以选择的图片张数，默认9,如果我们设置了多张,那么接收时//就不在是单个变量了,
      sizeType: ['original', 'compressed'], // original 原图，compressed 压缩图，默认二者都有
      sourceType: ['album', 'camera'], // album 从相册选图，camera 使用相机，默认二者都有
      success: function (res) {
        console.log(res)
        let filePath = res.tempFilePaths[0];
        app.NetUploadLogin(filePath, { type: 'applicant' }, res => {
          res = JSON.parse(res);
          console.log(res);
          that.setData({
            idCardImg: res.result
          })
          // 解析身份证正面照  
            let url = '/common/cardDisc', data = { "path": res.result, "type": "applicant" }
            app.NetRequestLogin(url, data, res => {
              console.log(res)
              if (res.code == 0) {
                that.setData({
                  ['sysUser.idCard']: res.result.code,
                  ['sysUser.userName']: res.result.name,
                  ['applicant.idNo']: res.result.code,
                  information: res.result
                })
              } else {
                //that.showToast('error', res.message);
                wx.showToast({
                  title: '身份证不清晰',
                  icon: 'success',
                  duration: 2000
                })
              }
            })
         
        })
      },
      fail: function (res) {
        //that.showToast('error', res.message)
      }
    })
  },
})